defaultTasks 'run'

apply plugin: 'java-library'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version '1.9.2'
group   'org.jason-lang'

repositories {
    mavenCentral()
    jcenter()
    google()

    maven { url "https://raw.githubusercontent.com/jacamo-lang/mvn-repo/master" }
    maven { url "https://raw.github.com/rosjava/rosjava_mvn_repo/master" }

    flatDir {
       dirs 'lib'
    }
}

dependencies {
    implementation group: 'org.jason',     name: 'jason' ,   version: '3.0'
    implementation 'org.ros.rosjava_core:rosjava:[0.3,0.4)'
    implementation 'org.ros.rosjava_messages:std_msgs:[0.5,0.6)'
    implementation 'org.ros.rosjava_bootstrap:message_generation:[0.3,0.4)'
    implementation files('lib/jason_ros_msgs.jar') //(name:'jason_ros_msgs', ext:'jar')

    implementation 'com.google.guava:guava:12.0'
    implementation 'org.apache.commons:com.springsource.org.apache.commons.logging:1.1.1'

}

sourceSets {
    main {
        java {
            srcDir 'src/java'
        }
        resources {
            srcDir 'src/resources'
        }
    }
}

task run (type: JavaExec, dependsOn: 'classes') {
    description 'runs the application'
    mainClass = 'jason.infra.centralised.RunCentralisedMAS'
    args 'rosjava_agents.mas2j'
    classpath sourceSets.main.runtimeClasspath
}

clean {
    delete 'bin'
    delete 'build'
}

task javadocJar (type: Jar, dependsOn: javadoc) {
    archiveBaseName = 'jasonros'
    archiveClassifier = 'javadoc'
}

task sourceJar (type : Jar) {
    archiveBaseName = 'jasonros'
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourceJar, javadocJar
}

publishing {
    publications {
        jasonros(MavenPublication) {
            from components.java
			      artifact sourceJar
			      artifact javadocJar
            artifactId 'jasonros'
        }
        jasonros_msgs(MavenPublication) {
            artifact 'lib/jason_ros_msgs.jar'
            artifactId 'jasonros_msgs'
        }
    }
}

task publishMavenGitHub(dependsOn: [ 'build', 'publishToMavenLocal']) {
  doLast {
    def wdir = System.getProperty("user.home")+'/.m2/repository/org/jason-lang/jasonros'
    def wdir_msgs = System.getProperty("user.home")+'/.m2/repository/org/jason-lang/jasonros_msgs'
    def rdir = System.getProperty("user.home")+'/pro/mvn-repo'
    exec {
        commandLine 'git', 'pull'
        workingDir rdir
    }
    copy {
        from wdir
        into rdir + '/org/jason-lang/jasonros'
    }
    copy {
        from wdir_msgs
        into rdir + '/org/jason-lang/jasonros_msgs'
    }
    exec {
        commandLine 'git', 'add', '*'
        workingDir rdir
    }
    exec {
        commandLine 'git', 'commit', '-a', '-m', 'new version of jasonros '+project.version
        workingDir rdir
    }
    exec {
        commandLine 'git', 'push'
        workingDir rdir
    }
  }
}
